trigger:
- master
- release/*
- refs/tags/*

pool: ft-a240-build-agents-windows
  
steps:
- powershell: |
    $majorMinor,$prerelease = Get-Content "major.minor"
    $version = "$majorMinor.$(Get-Date -UFormat "%y")$("{0:D3}" -f (Get-Date).DayofYear).$env:BUILD_BUILDID"
    $date = Get-Date -format dd.MM.yyyy

    (Get-Content cover.html).replace('[[VERSION]]', $version) | Set-Content cover.html
    (Get-Content cover.html).replace('[[TODAY]]', $date) | Set-Content cover.html
  displayName: 'Set version in cover page'

- powershell: |
    $i = 0
    Get-Content .\doc\toc.md | ForEach-Object {
        $success = $_ -match "#\s*\[(.*?)\]\((?<filename>.*?)\)"
        if ($success) {
            $path = Join-Path "doc" $matches['filename']
            "<style>body {counter-reset: h1 $i}</style>`n" + (Get-Content $path -Raw) | Set-Content $path
            $i++;
        }
    }
  displayName: 'Set chapter header counters'

- task: NodeTool@0
  inputs:
    checkLatest: true
    versionSpec: '12.x' 
  displayName: 'Install Node.js'

- script: 'npm install -g markdown-link-check'
  displayName: 'Install markdown-link-check'
   
- powershell: |
    Get-ChildItem -Path ".\doc\" -Filter "*.md" -Recurse | ForEach-Object {
      $path = Resolve-Path -Path $_.FullName -Relative
      if(!($path -match "\\\.[^\.\\]+")) {
        markdown-link-check -c .\markdown-link-check.config.json -q $path
      }
    }
  failOnStderr: true
  errorActionPreference: continue
  displayName: 'Check links'

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet'

- powershell: |
    # The current latest version 0.12.5 contains a bug that prevents the creation of TOCs
    # Specific version can be removed as soon as 0.12.6 is released
    choco install wkhtmltopdf --version 0.12.4.20170325 --allow-downgrade -y
    choco install docfx -y
  displayName: 'Install prerequisites'

- task: PowerShell@2
  inputs:
    filePath: 'set-chapter-numbers.ps1'

- powershell: |
    Start-Process docfx -Wait -RedirectStandardError $(Build.ArtifactStagingDirectory)/docfx-err.log -RedirectStandardOutput $(Build.ArtifactStagingDirectory)/docfx-out.log
  displayName: Run docfx

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: documentation'
  inputs:
    PathtoPublish: '_site_pdf/'
    ArtifactName: documentation

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: logs'
  inputs:
    ArtifactName: logs

